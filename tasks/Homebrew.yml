---
- name: Check if Homebrew is already installed
  stat:
    path: /usr/local/bin/brew
  register: brew

- name: Install homebrew
  script: install-homebrew.sh
  when: not brew.stat.exists
  args:
    creates: /usr/local/bin/brew

- name: Doctor Homebrew
  command: /usr/local/bin/brew doctor
  failed_when: "(\"Warning: Homebrew's bin was not found in your PATH.\" not in brew_health.stderr)"
  register: brew_health

- name: Update Homebrew
  command: /usr/local/bin/brew update

- name: Upgrade Homebrew
  command: /usr/local/bin/brew upgrade

# Tap.
- name: Ensure configured taps are tapped.
  homebrew_tap: "tap={{ item }} state=present"
  with_items: "{{ homebrew_taps }}"

# Cask.
- name: Install configured cask applications.
  homebrew_cask:
    name: "{{ item }}"
    state: present
    install_options: "appdir={{ homebrew_cask_appdir }}"
  with_items: "{{ homebrew_cask_apps }}"

- name: Ensure blacklisted cask applications are not installed.
  homebrew_cask: "name={{ item }} state=absent"
  with_items: "{{ homebrew_cask_uninstalled_apps }}"

# Brew.
- name: Ensure configured homebrew packages are installed.
  homebrew:
    name: "{{ item.name | default(item) }}"
    install_options: "{{ item.install_options | default(omit) }}"
    state: present
  with_items: "{{ homebrew_installed_packages }}"

- name: Ensure blacklisted homebrew packages are not installed.
  homebrew: "name={{ item }} state=absent"
  with_items: "{{ homebrew_uninstalled_packages }}"

- name: Upgrade all homebrew packages (if configured).
  homebrew: update_homebrew=yes upgrade_all=yes
  when: homebrew_upgrade_all_packages

# - name: Install Packages with Homebrew